import time

from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from app.handlers.adminPanel import showAdminPanel

adminPasswords = {0: '–≤–µ—Ä–æ–Ω–∏–∫–∞', 1: 'vxworks'}
adminID = None


class Admin(StatesGroup):
    admin_ID = State()
    admin_password = State()


async def admin(message: types.Message):
    buttons = [
        types.InlineKeyboardButton(text="–¢–æ–Ω–∏ –°—Ç–∞—Ä–∫", callback_data="–¢–æ–Ω–∏ –°—Ç–∞—Ä–∫"),
        types.InlineKeyboardButton(text="–ì—Ä–∏–≥–æ—Ä–∏–π –ö–∞—Ä–Ω–∞—Ü–µ–≤–∏—á", callback_data="–ì—Ä–∏–≥–æ—Ä–∏–π –ö–∞—Ä–Ω–∞—Ü–µ–≤–∏—á")
    ]
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(*buttons)
    await message.reply(f"üë©‚Äçüîß–í–•–û–î –í –†–ï–ñ–ò–ú –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–êüßë‚Äçüîß\n"
                        f"–°–æ–∑–¥–∞–Ω–Ω–æ 2 –∞–∫–∫–∞—É–Ω—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—Ç, –≤ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –≤–æ–π—Ç–∏ ‚û°Ô∏è",
                        reply_markup=keyboard)


async def tonyStark(call: types.CallbackQuery):
    global adminID
    adminID = 0
    await Admin.admin_password.set()
    await call.message.answer(text="–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –º–∏—Å—Ç–µ—Ä –°—Ç–∞—Ä–∫!üëã\n"
                                   "üóù –î–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç, –≤–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å:\n"
                                   "–ö–∞–∫–æ–µ –∫–æ–¥–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ—Å–∏–ª–æ –º–æ–¥—É–ª—å–Ω–æ–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ –∫–æ—Å—Ç—é–º—É –∂–µ–ª–µ–∑–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–µ –¥–ª—è –±–æ—Ä—å–±—ã —Å –•–∞–ª–∫–æ–º?")


async def grigoryKarnacevich(call: types.CallbackQuery):
    global adminID
    adminID = 1
    await Admin.admin_password.set()
    await call.message.answer(text="–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –º–∏—Å—Ç–µ—Ä –ö–∞—Ä–Ω–∞—Ü–µ–≤–∏—á! üëã\n"
                                   "üóù –î–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç, –≤–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å:\n"
                                   "C –ø–æ–º–æ—à—å—é –∫–∞–∫–æ–π –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –º–∞—Ä—Å–æ—Ö–æ–¥ Curiosity?")


async def processPassword(message: types.Message, state: FSMContext):
    if message.text.lower() != adminPasswords[adminID]:
        await message.reply('‚ùå–ù–ï–í–ï–†–ù–´–ô –û–¢–í–ï–¢ –ù–ê –ö–û–ù–¢–†–û–õ–¨–ù–´–ô –í–û–ü–†–û–°‚ùå\n'
                            '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–≤–µ—Ç –∏ –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ —Å–Ω–æ–≤–∞ ‚û°Ô∏è')
        await Admin.adminPassword.set()
        return
    await message.reply('–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!‚úÖ')
    await state.finish()
    time.sleep(5)
    await showAdminPanel(message)


def register_handlers_admin(dp: Dispatcher):
    dp.register_message_handler(admin, commands="admin")
    dp.register_callback_query_handler(tonyStark, text="–¢–æ–Ω–∏ –°—Ç–∞—Ä–∫")
    dp.register_callback_query_handler(grigoryKarnacevich, text="–ì—Ä–∏–≥–æ—Ä–∏–π –ö–∞—Ä–Ω–∞—Ü–µ–≤–∏—á")
    dp.register_message_handler(processPassword, state=Admin.admin_password)